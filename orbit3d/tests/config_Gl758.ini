[data_paths]
# Hipparcos ID of the star in question. This is used for fetching it's intermediate astrometry.
HipID = 95319
# The Hippacros Gaia Catalog
HGCAFile = HGCA_vDR2_corrected.fits
# The file containing the radial velocity time series for the star.
RVFile = orbit3d/tests/data/Gl758_RV.dat
# The file containing the relative astrometry for the star. 
AstrometryFile = orbit3d/tests/data/Gl758_relAST.txt
# The path to all the Gaia DR2 intermediate data
GaiaDataDir = orbit3d/tests/data/gaia
# The path to all the Hipparcos (original reduction) intermediate data
Hip1DataDir = orbit3d/tests/data/hip1
# The path to all the Hipparcos (second reduction) intermediate data
Hip2DataDir = orbit3d/tests/data/hip2
# The file path to the initial conditions to the orbit. Set to None for default guess.
start_file = start_Gl758.dat

[mcmc_settings]
# Number of temperatures to use in the parallel tempering chain
ntemps = 5
# Number of walkers. Each walker will have ntemps number of chains.
nwalkers = 100
# Number of planets to fit.
nplanets = 1
# Number of steps contained in each chain
nstep = 10000
# How much to thin the chain (save every thin-th step)
thin = 50
## Number of threads to use with emcee. Note this built-in parallelization is poor.
nthreads = 2
# True if you want to use the epoch astrometry in GaiaDataDir, Hip1DataDir etc... False if not.
use_epoch_astrometry = True

[priors_settings]
# Priors on primary mass (solar), if prior is not specified, mpri should be inf.
mpri = 1
mpri_sig = inf
minjitter = 1e-5
maxjitter = 1e3

[secondary_gaia]
# If the secondary star is in Gaia, set companion_ID to a nonnegative number
# matching the ID of the companion in the relative astrometry file.  Setting
# companion_ID to a negative number ignores the rest of this.
companion_ID = -1
# The rest of these should be from Gaia in units of mas.
pmra = 0
pmdec = 0
epmra = 100
epmdec = 100
corr_pmra_pmdec = 0

[plotting]
# Path to mcmc chains. This is what's produced by the orbit_fit command.
McmcDataFile = orbit3d/tests/HIP95319_chain001.fits
# Diagnostic plots to check for convergence.
check_convergence = True
# Define burnin for chains.
burnin = 100
# Which companion to plot?
iplanet = 0

# Name of the target
target = Gl758B
# This is a customized range of epochs you want to plot.
start_epoch = 1900.
end_epoch = 2020.
# Number of random orbits drawn from the posterior distribution you want to plot.
num_orbits = 50
# Define step size for plotting.
num_steps = 1500
# Plot random predicted epoch positions on the Astrometry plot.
predicted_years = 1990,2000,2010,2020,2030
position_predict = 2020.55

# Select which plot you want to generate, (Relative_RV_which_Instrument = All or Astrometry_orbits_plot = True
Astrometric_prediction_plot = True
RV_orbits_plot = True
Relative_RV_plot = True
Relative_RV_Instrument = All
Relative_separation_plot =True
Position_angle_plot = True
Proper_motion_plot = True
Proper_motion_separate_plots = False
Corner_plot = True

############# Advanced plotting settings #############
# 1. Set axes limits. Set the upper and lower limit for x and y axes.
set_limit = False
xlim = 2008, 2020
ylim = -1,1
# Choose the color of the marker for plotting the observed data points.
marker_color = red

# 2. Turn on/off colorbar. Choose a matplotlib colormap, set colorbar size (fraction) and position (pad), choose to color code by the secondary mass (msec) or eccentricity (ecc). For reference, fraction=0.046 and pad=0.04 for Astrometric orbits plots, and fraction=12 and pad=20 for other plots.
use_colorbar = True
colormap = viridis
fraction = -1
pad = 0.04
reference = msec_jup

# 3. Turn on/off the title of the plot? Additionally, if user wants to add a text somewhere on the plot, enter the text name and its x and y position.
show_title = False
add_text = False
text_name = Gl 758B
x_text = 2016
y_text = 1.8

[save_results]
# percentage error: 1sigma = 0.16, 0.5, 0.84, 2sigma = 0.025, 0.5, 0.975, or arbitrary
save_params = True
err_margin = 0.16, 0.5, 0.84